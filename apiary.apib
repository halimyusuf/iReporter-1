FORMAT: 1A
HOST: https://olajide-ireporter.herokuapp.com/api/v1

# iReporter

iReporter is the API for a Cycle 39 Bootcamp project for Andela applicants.

####Summary
Corruption is a huge bane to Africaâ€™s development. 
African countries must develop novel and localised solutions that will curb this menace, hence the birth of iReporter. 

iReporter enables any/every citizen to bring any form of corruption to the notice of appropriate authorities and the general public. 
Users can also report on things that needs government intervention.

The API interface always returns a status code in the body of the response and additional data or error message.

#### These are the allowed HTTP requests: 

- POST: To create a resource
- GET: Get a resource or list of resources
- DELETE: To delete resource
- PUT: To completely update a resource or create a new one where resource does not exist
- PATCH: To partially update a resource

#### Expected server responses:

- 200 `OK` - the request was successful.
- 201 `Created` - the request was successful and a resource was created.
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 403 `Forbidden` - user does not have permissions for requested operation.
- 404 `Not Found` - resource was not found.

## Welcome messages [/]

### API welcome message [GET]

This displays the API welcome message.

+ Response 200 (application/json)

        {
            "status": 200,
            "data": "Welcome to Andela Bootcamp iReporter Project API"
        }

## Create new Red-flag record and get all records [/records/red-flags]

### Create a single Red-flag record [POST]

This allows you to create a new Red-flag record. Record IDs are automaically assigned and returned in body of response. 
All information listed in the body of the request (e.g. createdBy, dateOfIncident, etc.) are required.

+ Request (application/json)

        {
            "createdBy": "Tester 1",
            "type": "Red-flag",
            "dateOfIncident" : "1 April 2018",
            "title": "Atikulate or Buharify",
            "comment": "Should I Atikulate or Buharify?",
            "images": "testimage.cn",
            "videos": "testvideo.cn",
            "location": "Abuja" 
        }

+ Response 200 (application/json)

        {
            "status": 201,
            "data": [
                {
                "id": 2,
                "message": "Created red-flag record",
                "new_record": {
                    "id": 2,
                    "createdOn": "Thu Dec 06 2018 03:06:08 GMT+0000 (Coordinated Universal Time)",
                    "createdBy": "Tester 1",
                    "type": "Red-flag",
                    "dateOfIncident": "1 April 2018",
                    "title": "Atikulate or Buharify",
                    "comment": "Should I Atikulate or Buharify?",
                    "images": "testimage.cn",
                    "videos": "testvideo.cn",
                    "location": "Abuja",
                    "status": "draft"
                }
                }
            ]
        }
 

### Get all Red-flag records [GET]

This fetches all Red-flag records available.

+ Response 200 (application/json)

        {
            "status":200,   
            "data"  : [
                { 
                    "id":1,
                    "createdOn":"Sample date",
                    "createdBy":"Sample Creator",
                    "type":"Sample record type",
                    "dateOfIncident":"Sample date",
                    "title":"Sample title",
                    "comment":"Sample comment",
                    "Images":["Sample Image"],
                    "Videos":["Sample Video"],
                    "location":"Sample record location",
                    "status":"Sample status"
                }   
            ]
        }

   
## Get and edit individual Red-flag records [/records/red-flags/{id}]

### Get a single Red-flag record [GET]

This fetches an individual Red-flag record specified by ID.
ID parameter is important, please specify under URI parameters. 

+ Request (application/json)

    + Parameters

     + id: 1 (required, number)

+ Response 200 (application/json)

        {
            "status":200,   
            "data"  : [
                { 
                    "id":1,
                    "createdOn":"Sample date",
                    "createdBy":"Sample Creator",
                    "type":"Sample record type",
                    "dateOfIncident":"Sample date",
                    "title":"Sample title",
                    "comment":"Sample comment",
                    "Images":["Sample Image"],
                    "Videos":["Sample Video"],
                    "location":"Sample record location",
                    "status":"Sample status"
                }   
            ]
        } 

### Delete a single red-flag record [DELETE]

This deletes an individual Red-flag record specified by ID.
ID parameter is important, please specify under URI parameters. 

+ Request (application/json)

    + Parameters

     + id: 2 (required, number)

+ Response 200 (application/json)

        {
            "status": 200,   
            "message" : "No content: Red-flag record has been deleted"
        } 
    
    
### Update a single Red-flag records [PUT]

- This updates an individual Red-flag record or creates a new one where record does not exist.
- ID parameter is important, please specify under URI parameters. 
- Record IDs are automaically assigned and returned in body of response for newly created records 
- All information listed in the body of the request (e.g. createdBy, dateOfIncident, etc.) are required.
- This method cannot be used to updated record status as only admins can do this.

+ Request (application/json)

    + Parameters

         + id: 100 (required, number)
    
    + Body

            {
                "createdBy": "Tester 1",
                "dateOfIncident" : "Updated date: 1 jan 2017",
                "title": "Updated title: Atikulate or Buharify",
                "comment": "Updated comment: Should I Atikulate or Buharify?",
                "images": "Updated: testimage.cn",
                "videos": "Updated: testvideo.cn",
                "location": "Updated: Abuja"
            }

+ Response 200 (application/json)

        {
            "status":200,   
            "data"  : [
                { 
                    "id":$,
                    "message":"Created: Created red-flag record"
                }   
            ]
        }

## Edit individual Red-flag record location [/records/red-flags/{id}/location]
### Update a Red-flag record location [PATCH]

This updates a specified Red-flag record's location. 
ID parameter is important, please specify under URI parameters. 

+ Request (application/json)

    + Parameters

     + id: 1 (required, number)
    
    + Body
    
            {
                "location" : "Sambisa forest"
            }

+ Response 200 (application/json)

        {
            "status":200,   
            "data"  : [
                { 
                    "id" : $,
                    "message" : "Updated red-flag record's location",
                }   
            ]
        } 

## Edit individual Red-flag record comment [/records/red-flags/{id}/comment]
### Update a Red-flag record comments [PATCH]

This updates a specified Red-flag record's location.
ID parameter is important, please specify under URI parameters. 

+ Request (application/json)

    + Parameters

     + id: 1 (required, number)
    
    + Body
    
            {
                "comment": "Gandollar is real!"
            }

+ Response 200 (application/json)

        {
            "status": 200,   
            "data"  : [
                { 
                    "id" : 1,
                    "message" : "Updated red-flag record's comment"
                }   
            ]
        }